#7. Access Modifiers: Public, Private, and Protected
#Assignment:
#Create a class Employee with:

#a public variable name,

#a protected variable _salary, and

#a private variable __ssn.

#Try accessing all three variables from an object of the class and document what happens.

class Employee:
    def __init__(self, name, salary, ssn):
        self.name = name        # Public variable
        self._salary = salary   # Protected variable (by convention)
        self.__ssn = ssn        # Private variable (name mangled)

# Creating an object
emp = Employee("John Doe", 50000, "123-45-6789")

# Accessing variables from outside the class
print("Public:", emp.name)          # Works fine
print("Protected:", emp._salary)    # Accessible, but should be treated as protected
try:
    print("Private:", emp.__ssn)    # Will raise AttributeError
except AttributeError:
    print("Private: Cannot access __ssn directly (AttributeError)")

# Accessing private variable using name mangling
print("Private (via name mangling):", emp._Employee__ssn)
